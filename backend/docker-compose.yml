version: '3.9'

services:
  login-service:
    build:
      context: ./
      dockerfile: loginService/Dockerfile
    ports:
      - '5000:5000'
    environment:
      - REGISTER_SERVICE_URL=http://register-service:5001
    depends_on:
      - register-service
    networks:
      - backend-network
    volumes:
      - ./.env:/app/.env

  register-service:
    build:
      context: ./
      dockerfile: registerService/Dockerfile
    ports:
      - '5001:5001'
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPBASE_KEY=${SUPBASE_KEY}
    networks:
      - backend-network
    volumes:
      - ./.env:/app/.env

  group-service:
    build:
      context: ./
      dockerfile: groupService/Dockerfile
    ports:
      - '5002:5002'
    environment:
      - LOGIN_SERVICE_URL=http://login-service:5000
    networks:
      - backend-network
    volumes:
      - ./.env:/app/.env

  frontend:
    build:
      context: ../frontend
    ports:
      - '3000:3000'
    depends_on:
      - login-service
      - register-service
    networks:
      - backend-network

  class-service:
    build:
      context: ./
      dockerfile: classService/Dockerfile
    ports:
      - '4003:4003'
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPBASE_KEY=${SUPBASE_KEY}
    networks:
      - backend-network
    volumes:
      - ./.env:/app/.env
    depends_on:
      - register-service

  calendar-service:
    build:
      context: ./
      dockerfile: calendarService/Dockerfile
    ports:
      - '4004:4004'
    environment:
      - GCALENDAR_KEY=${GCALENDAR_KEY}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPBASE_KEY=${SUPBASE_KEY}
    networks:
      - backend-network
    volumes:
      - ./.env:/app/.env
    depends_on:
      - register-service

networks:
  backend-network:
    driver: bridge
  frontend-network:
    driver: bridge
